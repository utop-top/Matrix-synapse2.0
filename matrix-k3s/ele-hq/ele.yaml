apiVersion: v1
kind: Namespace
metadata:
  name: ele-hq
---
# Deployment for synapse-admin
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synapse-admin
  namespace: ele-hq
  labels:
    app: synapse-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synapse-admin
  template:
    metadata:
      labels:
        app: synapse-admin
    spec:
      containers:
      - name: synapse-admin
        image: awesometechnologies/synapse-admin:latest
        ports:
        - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: synapse-admin
  namespace: ele-hq
spec:
  selector:
    app: synapse-admin
  ports:
  - port: 8111
    targetPort: 80
  type: NodePort
---
# Deployment for element-web
apiVersion: apps/v1
kind: Deployment
metadata:
  name: element-web
  namespace: ele-hq
  labels:
    app: element-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: element-web
  template:
    metadata:
      labels:
        app: element-web
    spec:
      securityContext:  # 添加在这里，Pod 级别
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: element-web
        image: vectorim/element-web:develop
        ports:
        - containerPort: 80
        env:
        - name: NGINX_PORT  # 强制Nginx监听80
          value: "80"
        volumeMounts:
        - name: config
          mountPath: /app/config.json
        livenessProbe:
          httpGet:
            path: /version
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
      volumes:
      - name: config
        hostPath:
          path: /root/Matrix/ele-hq/element-web/config.json
          type: File
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: element-web
  namespace: ele-hq
spec:
  selector:
    app: element-web
  ports:
  - port: 8200
    targetPort: 80
  type: NodePort
---
# Deployment for element-call
apiVersion: apps/v1
kind: Deployment
metadata:
  name: element-call
  namespace: ele-hq
  labels:
    app: element-call
spec:
  replicas: 1
  selector:
    matchLabels:
      app: element-call
  template:
    metadata:
      labels:
        app: element-call
    spec:
      containers:
      - name: element-call
        image: ghcr.io/element-hq/element-call:latest-ci
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /app/config.json
      volumes:
      - name: config
        hostPath:
          path: /root/Matrix/ele-hq/element-call/config.json
          type: File
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: element-call
  namespace: ele-hq
spec:
  selector:
    app: element-call
  ports:
  - port: 7100
    targetPort: 8080
  type: NodePort
---
# Deployment for lk-jwt
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lk-jwt
  namespace: ele-hq
  labels:
    app: lk-jwt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lk-jwt
  template:
    metadata:
      labels:
        app: lk-jwt
    spec:
      hostname: auth-server
      containers:
      - name: lk-jwt
        image: ghcr.io/element-hq/lk-jwt-service:latest-ci
        ports:
        - containerPort: 8080
        env:
        - name: LK_JWT_PORT
          value: "8080"
        - name: LIVEKIT_URL
          value: "wss://livekit.aosn.de:443"
        - name: LIVEKIT_KEY
          value: "devkey"
        - name: LIVEKIT_SECRET
          value: "SOMETHING_SECRET_YOU_SHOULD_GENERATE"
        - name: LIVEKIT_INSECURE_SKIP_VERIFY_TLS
          value: "YES_I_KNOW_WHAT_I_AM_DOING"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: lk-jwt
  namespace: ele-hq
spec:
  selector:
    app: lk-jwt
  ports:
  - port: 7111
    targetPort: 8080
  type: NodePort
---
# Deployment for livekit
apiVersion: apps/v1
kind: Deployment
metadata:
  name: livekit
  namespace: ele-hq
  labels:
    app: livekit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: livekit
  template:
    metadata:
      labels:
        app: livekit
    spec:
      securityContext:  # 添加在这里，Pod 级别
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: livekit
        image: livekit/livekit-server:latest
        args: ["--dev", "--config", "/etc/livekit.yaml"]
        ports:
        - containerPort: 7880
          protocol: TCP
        - containerPort: 7881
          protocol: TCP
        - containerPort: 7882
          protocol: TCP
        - containerPort: 50850  # 仅保留一个主要 UDP 端口
          protocol: UDP
        volumeMounts:
        - name: config
          mountPath: /etc/livekit.yaml
      volumes:
      - name: config
        hostPath:
          path: /root/Matrix/ele-hq/element-call/livekit.yaml
          type: File
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: livekit
  namespace: ele-hq
spec:
  selector:
    app: livekit
  ports:
  - name: port-7880
    port: 7880
    targetPort: 7880
    protocol: TCP
  - name: port-7881
    port: 7881
    targetPort: 7881
    protocol: TCP
  - name: port-7882
    port: 7882
    targetPort: 7882
    protocol: TCP
  - name: port-50850
    port: 50850
    targetPort: 50850
    protocol: UDP
  type: NodePort
---
# Deployment for ele-hq-redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ele-hq-redis
  namespace: ele-hq
  labels:
    app: ele-hq-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ele-hq-redis
  template:
    metadata:
      labels:
        app: ele-hq-redis
    spec:
      containers:
      - name: ele-hq-redis
        image: redis:6-alpine
        ports:
        - containerPort: 6379
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ele-hq-redis
  namespace: ele-hq
spec:
  selector:
    app: ele-hq-redis
  ports:
  - port: 6377
    targetPort: 6379
  type: NodePort