#!/bin/bash

# 脚本名称：generate_secrets.sh
# 功能：生成 secrets.yaml, config.yaml, home.yaml，提示输入域名，client_id 为 ULID

# 检查是否安装了 openssl
if ! command -v openssl &> /dev/null; then
    echo "Error: openssl is not installed. Please install it first."
    exit 1
fi

# 生成随机 kid（10 字符）
generate_kid() {
    openssl rand -hex 5 | head -c 10
}

# 生成随机 secret（32 字符 Base64）
generate_secret() {
    openssl rand -base64 24 | head -c 32
}

# 生成 ULID（26 字符，Crockford Base32 编码）
generate_ulid() {
    base32_chars="0123456789ABCDEFGHJKMNPQRSTVWXYZ"
    timestamp=$(date +%s%3N)
    ts_part=""
    num=$timestamp
    for ((i=0; i<10; i++)); do
        remainder=$((num % 32))
        ts_part="${base32_chars:$remainder:1}$ts_part"
        num=$((num / 32))
    done
    ts_part=$(printf "%10s" "$ts_part" | tr ' ' '0')
    random_part=""
    for ((i=0; i<16; i++)); do
        rand=$((RANDOM % 32))
        random_part="$random_part${base32_chars:$rand:1}"
    done
    echo "$ts_part$random_part"
}

# 改进域名输入提示
echo "=== Domain Configuration ==="
echo "You need to provide two domains for the configuration:"
echo "1. MAS service domain: Used for MAS authentication service (e.g., auth.example.com)."
echo "   - Do NOT include 'https://'."
echo "   - This will set 'public_base' and 'issuer' in config.yaml, and 'issuer' in home.yaml."
echo "2. Matrix service domain: Used for Matrix homeserver (e.g., matrix.example.com)."
echo "   - Do NOT include 'https://'."
echo "   - This will set 'matrix.homeserver' and 'matrix.endpoint' in config.yaml."
echo ""

echo "Enter the MAS service domain (e.g., auth.example.com):"
read mas_domain
if [[ -z "$mas_domain" ]]; then
    echo "Error: MAS service domain cannot be empty."
    exit 1
fi

echo "Enter the Matrix service domain (e.g., matrix.example.com):"
read matrix_domain
if [[ -z "$matrix_domain" ]]; then
    echo "Error: Matrix service domain cannot be empty."
    exit 1
fi
echo "========================"

# 创建文件
secrets_file="secrets.yaml"
config_file="config.yaml"
home_file="home.yaml"
echo "Generating $secrets_file, $config_file, and $home_file in $(pwd)..."

# 生成 secrets 配置
encryption_key=$(openssl rand -hex 32)
matrix_secret=$(generate_secret)
client_id=$(generate_ulid)
client_secret=$(generate_secret)

# 生成密钥并存储
rsa_kid=$(generate_kid)
rsa_key=$(openssl genrsa 2048 2>/dev/null)
ec_kids=()
ec_keys=()
for i in 1 2 3; do
    ec_kids[$i]=$(generate_kid)
    ec_keys[$i]=$(openssl ecparam -name prime256v1 -genkey -noout 2>/dev/null)
done

# 写入 secrets.yaml
cat > "$secrets_file" << EOF
secrets:
  encryption: "$encryption_key"
  keys:
    - kid: $rsa_kid
      key: |
$(echo "$rsa_key" | sed 's/^/        /')
    - kid: ${ec_kids[1]}
      key: |
$(echo "${ec_keys[1]}" | sed 's/^/        /')
    - kid: ${ec_kids[2]}
      key: |
$(echo "${ec_keys[2]}" | sed 's/^/        /')
    - kid: ${ec_kids[3]}
      key: |
$(echo "${ec_keys[3]}" | sed 's/^/        /')

matrix:
  homeserver: $matrix_domain
  secret: '$matrix_secret'
  endpoint: https://$matrix_domain/

clients:
  - client_id: $client_id
    client_auth_method: client_secret_basic
    client_secret: '$client_secret'
EOF

# 写入 config.yaml
cat > "$config_file" << EOF
# WARNING: This file is autogenerated by element-quick-start from templates

http:
  listeners:
  - name: web
    resources:
    - name: discovery
    - name: human
    - name: oauth
    - name: compat
    - name: graphql
    - name: assets
    binds:
    - address: '[::]:8080'
    proxy_protocol: false
  - name: internal
    resources:
    - name: health
    binds:
    - host: localhost
      port: 8081
    proxy_protocol: false
  trusted_proxies:
  - 192.168.0.0/16
  - 172.16.0.0/12
  - 10.0.0.0/10
  - 127.0.0.1/8
  - fd00::/8
  - ::1/128
  public_base: https://$mas_domain
  issuer: https://$mas_domain/

database:
  host: mas-db
  database: mas
  username: synapse_user
  password: your_password
  max_connections: 10
  min_connections: 0
  connect_timeout: 30
  idle_timeout: 600
  max_lifetime: 1800

email:
  from: '"Matrix Authentication Service" <matrix.aosn@gmail.com>'
  reply_to: '"Matrix Authentication Service" <matrix.aosn@gmail.com>'
  transport: smtp
  mode: starttls  
  hostname: smtp.gmail.com
  port: 587
  username: matrix.aosn@gmail.com
  password: cqkrdkagdwavswho

secrets:
  encryption: "$encryption_key"
  keys:
    - kid: $rsa_kid
      key: |
$(echo "$rsa_key" | sed 's/^/        /')
    - kid: ${ec_kids[1]}
      key: |
$(echo "${ec_keys[1]}" | sed 's/^/        /')
    - kid: ${ec_kids[2]}
      key: |
$(echo "${ec_keys[2]}" | sed 's/^/        /')
    - kid: ${ec_kids[3]}
      key: |
$(echo "${ec_keys[3]}" | sed 's/^/        /')

matrix:
  homeserver: $matrix_domain
  secret: '$matrix_secret'
  endpoint: https://$matrix_domain/

clients:
  - client_id: $client_id
    client_auth_method: client_secret_basic
    client_secret: '$client_secret'

passwords:
  enabled: true
  schemes:
  - version: 1
    algorithm: argon2id
  minimum_complexity: 3

templates:
  path: /usr/local/share/mas-cli/templates/
  assets_manifest: /usr/local/share/mas-cli/manifest.json
  translations_path: /usr/local/share/mas-cli/translations/

policy:
  wasm_module: /usr/local/share/mas-cli/policy.wasm
  client_registration_entrypoint: client_registration/violation
  register_entrypoint: register/violation
  authorization_grant_entrypoint: authorization_grant/violation
  password_entrypoint: password/violation
  email_entrypoint: email/violation
  data:
    client_registration:
      allow_insecure_uris: true
      allow_missing_contacts: true
    admin_users:
      - admin

account:
  password_registration_enabled: false

branding:
  service_name: null
  policy_uri: null
  tos_uri: null
  imprint: null
  logo_uri: null

upstream_oauth2:
  providers: []

experimental:
  access_token_ttl: 86400
  compat_token_ttl: 86400
EOF

# 写入 home.yaml
cat > "$home_file" << EOF
experimental_features:
  msc3266_enabled: true
  msc4222_enabled: true
  msc4108_enabled: true
  msc3861:
    enabled: true
    issuer: https://$mas_domain
    client_id: $client_id
    client_auth_method: client_secret_basic
    client_secret: '$client_secret'
    admin_token: '$matrix_secret'
    account_management_url: "https://$mas_domain/account"
EOF

# 设置文件权限
chmod 600 "$secrets_file" "$config_file" "$home_file"

echo "Done! Generated $secrets_file, $config_file, and $home_file."
echo " - $secrets_file: Contains secrets, matrix, and clients for reference."
echo " - $config_file: Updated with domains ($mas_domain, $matrix_domain) and secrets."
echo " - $home_file: Updated with MAS domain ($mas_domain) and imported secrets."
echo "Copy $config_file to your MAS configuration (e.g., ~/Dockers/Xchat/config/dev_config.yaml)."
echo "Copy $home_file to your Synapse configuration (e.g., ~/Dockers/Xchat/config/homeserver.yaml)."
echo "Replace 'your_password' in $config_file with your actual database password."
echo "Replace 'cqkrdkagdwavswho' in $config_file with your actual email password if needed."